{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aashi\\\\OneDrive\\\\Desktop\\\\Cricket-Player-Management\\\\frontend\\\\src\\\\pages\\\\Teams.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TeamForm from '../components/TeamForm';\nimport TeamList from '../components/TeamList';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Teams() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [loading, setLoading] = useState(false); // For loading state\n  const [error, setError] = useState(null); // For error state\n  // fetch teams from api\n  /* this is comment-out for now\r\n    const fetchTeams = async () => {\r\n    const res = await api.get('/teams/');\r\n    setTeams(res.data);\r\n  };\r\n  */\n\n  const fetchTeams = async () => {\n    setLoading(true);\n    setError(null); // Reset error before fetching\n    try {\n      const res = await api.get('/teams/');\n      setTeams(res.data);\n    } catch (err) {\n      setError('Error fetching teams');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTeams();\n  }, []);\n\n  // handle add or update team\n  /* comment-out for now\r\n    const handleAddOrUpdate = async (teamData) => {\r\n    if (teamData.id) {\r\n      await api.put(`/teams/${teamData.id}`, teamData);\r\n    } else {\r\n      await api.post('/teams/', teamData);\r\n    }\r\n    fetchTeams();\r\n  };\r\n    */\n  /*\r\n   const handleAddOrUpdate = async (teamData) => {\r\n     setLoading(true);\r\n     setError(null); // Reset error before making request\r\n     try {\r\n       if (teamData.id) {\r\n         await api.put(`/teams/${teamData.id}`, teamData);\r\n       } else {\r\n         await api.post('/teams/', teamData);\r\n       }\r\n       fetchTeams();\r\n     } catch (err) {\r\n       setError('Error saving team');\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n   */\n\n  // handle delete team\n  /* comment out for now\r\n  \r\n    const handleDelete = async (id) => {\r\n      if (window.confirm('Are you sure you want to delete this team?')) {\r\n        await api.delete(`/teams/${id}`);\r\n        fetchTeams();\r\n      }\r\n    };\r\n    */\n  /*\r\n  const handleDelete = async (id) => {\r\n     if (window.confirm('Are you sure you want to delete this team?')) {\r\n       setLoading(true);\r\n       setError(null); // Reset error before making request\r\n       try {\r\n         await api.delete(`/teams/${id}`);\r\n         fetchTeams();\r\n       } catch (err) {\r\n         setError('Error deleting team');\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     }\r\n   };\r\n   */\n  //handle edit team\n  /*\r\n    const handleEdit = (team) => {\r\n      setSelectedTeam(team);\r\n    };\r\n  */\n  //return (\n  //<div>\n  //<h2>Manage Teams</h2>\n  //{loading && <p>Loading...</p>} {/* Show loading indicator */}\n  //{error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error message */}\n  // <TeamForm onSubmit={handleAddOrUpdate} selectedTeam={selectedTeam} clearSelection={() => setSelectedTeam(null)} />\n  //<TeamList teams={teams} onEdit={handleEdit} onDelete={handleDelete} />\n  //</div>\n  //);\n  //}\n\n  //export default Teams;\n  // Add or update a team\n  const handleAddOrUpdate = async formData => {\n    const teamData = {\n      team_name: formData.name,\n      city: formData.city,\n      coach: formData.coach,\n      founded_year: formData.founded_year\n    };\n    setLoading(true);\n    setError(null);\n    try {\n      if (formData.id) {\n        // If updating, include ID in request\n        await api.put(`/teams/${formData.id}`, teamData);\n      } else {\n        // Else, create new team\n        await api.post('/teams/', teamData);\n      }\n      fetchTeams();\n    } catch (err) {\n      console.error('Error saving team:', err);\n      setError('Error saving team');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a team\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this team?')) {\n      setLoading(true);\n      setError(null);\n      try {\n        await api.delete(`/teams/${id}`);\n        fetchTeams();\n      } catch (err) {\n        console.error('Error deleting team:', err);\n        setError('Error deleting team');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Select a team for editing\n  const handleEdit = team => {\n    setSelectedTeam(team);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TeamForm, {\n      onSubmit: handleAddOrUpdate,\n      selectedTeam: selectedTeam,\n      clearSelection: () => setSelectedTeam(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamList, {\n      teams: teams,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(Teams, \"yEmke/RZrFwi7QOqWPnVPzi48zs=\");\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useEffect","useState","TeamForm","TeamList","api","jsxDEV","_jsxDEV","Teams","_s","teams","setTeams","selectedTeam","setSelectedTeam","loading","setLoading","error","setError","fetchTeams","res","get","data","err","handleAddOrUpdate","formData","teamData","team_name","name","city","coach","founded_year","id","put","post","console","handleDelete","window","confirm","delete","handleEdit","team","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","clearSelection","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/aashi/OneDrive/Desktop/Cricket-Player-Management/frontend/src/pages/Teams.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport TeamForm from '../components/TeamForm';\r\nimport TeamList from '../components/TeamList';\r\nimport api from '../api';\r\n\r\nfunction Teams() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedTeam, setSelectedTeam] = useState(null);\r\nconst [loading, setLoading] = useState(false); // For loading state\r\n  const [error, setError] = useState(null); // For error state\r\n  // fetch teams from api\r\n  /* this is comment-out for now\r\n\r\n  const fetchTeams = async () => {\r\n    const res = await api.get('/teams/');\r\n    setTeams(res.data);\r\n  };\r\n  */\r\n\r\n const fetchTeams = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error before fetching\r\n    try {\r\n      const res = await api.get('/teams/');\r\n      setTeams(res.data);\r\n    } catch (err) {\r\n      setError('Error fetching teams');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  // handle add or update team\r\n  /* comment-out for now\r\n\r\n  const handleAddOrUpdate = async (teamData) => {\r\n    if (teamData.id) {\r\n      await api.put(`/teams/${teamData.id}`, teamData);\r\n    } else {\r\n      await api.post('/teams/', teamData);\r\n    }\r\n    fetchTeams();\r\n  };\r\n\r\n  */\r\n /*\r\n  const handleAddOrUpdate = async (teamData) => {\r\n    setLoading(true);\r\n    setError(null); // Reset error before making request\r\n    try {\r\n      if (teamData.id) {\r\n        await api.put(`/teams/${teamData.id}`, teamData);\r\n      } else {\r\n        await api.post('/teams/', teamData);\r\n      }\r\n      fetchTeams();\r\n    } catch (err) {\r\n      setError('Error saving team');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  */\r\n\r\n// handle delete team\r\n/* comment out for now\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this team?')) {\r\n      await api.delete(`/teams/${id}`);\r\n      fetchTeams();\r\n    }\r\n  };\r\n  */\r\n /*\r\n const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this team?')) {\r\n      setLoading(true);\r\n      setError(null); // Reset error before making request\r\n      try {\r\n        await api.delete(`/teams/${id}`);\r\n        fetchTeams();\r\n      } catch (err) {\r\n        setError('Error deleting team');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n  */\r\n//handle edit team\r\n/*\r\n  const handleEdit = (team) => {\r\n    setSelectedTeam(team);\r\n  };\r\n*/\r\n  //return (\r\n    //<div>\r\n      //<h2>Manage Teams</h2>\r\n      //{loading && <p>Loading...</p>} {/* Show loading indicator */}\r\n      //{error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error message */}\r\n     // <TeamForm onSubmit={handleAddOrUpdate} selectedTeam={selectedTeam} clearSelection={() => setSelectedTeam(null)} />\r\n      //<TeamList teams={teams} onEdit={handleEdit} onDelete={handleDelete} />\r\n    //</div>\r\n  //);\r\n//}\r\n\r\n//export default Teams;\r\n// Add or update a team\r\n  const handleAddOrUpdate = async (formData) => {\r\n    const teamData = {\r\n      team_name: formData.name,\r\n      city: formData.city,\r\n      coach: formData.coach,\r\n      founded_year: formData.founded_year,\r\n    };\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      if (formData.id) {\r\n        // If updating, include ID in request\r\n        await api.put(`/teams/${formData.id}`, teamData);\r\n      } else {\r\n        // Else, create new team\r\n        await api.post('/teams/', teamData);\r\n      }\r\n      fetchTeams();\r\n    } catch (err) {\r\n      console.error('Error saving team:', err);\r\n      setError('Error saving team');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete a team\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this team?')) {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        await api.delete(`/teams/${id}`);\r\n        fetchTeams();\r\n      } catch (err) {\r\n        console.error('Error deleting team:', err);\r\n        setError('Error deleting team');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Select a team for editing\r\n  const handleEdit = (team) => {\r\n    setSelectedTeam(team);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Manage Teams</h2>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <TeamForm\r\n        onSubmit={handleAddOrUpdate}\r\n        selectedTeam={selectedTeam}\r\n        clearSelection={() => setSelectedTeam(null)}\r\n      />\r\n\r\n      <TeamList\r\n        teams={teams}\r\n        onEdit={handleEdit}\r\n        onDelete={handleDelete}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}