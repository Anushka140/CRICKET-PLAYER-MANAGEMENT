{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aashi\\\\OneDrive\\\\Desktop\\\\Cricket-Player-Management\\\\frontend\\\\src\\\\pages\\\\Players.jsx\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport PlayerForm from '../components/PlayerForm';\r\nimport PlayerList from '../components/PlayerList';\r\nimport api from '../api';\r\n\r\nfunction Players() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\r\n\r\n\r\n  const fetchPlayers = async () => {\r\n    const res = await api.get('/players/');\r\n    setPlayers(res.data);\r\n  };\r\n\r\n  const fetchTeams = async () => {\r\n    const res = await api.get('/teams/');\r\n    setTeams(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlayers();\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  const handleAddOrUpdate = async (playerData) => {\r\n    if (playerData.id) {\r\n      await api.put(`/players/${playerData.id}`, playerData);\r\n    } else {\r\n      await api.post('/players/', playerData);\r\n    }\r\n    fetchPlayers();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this player?')) {\r\n      await api.delete(`/players/${id}`);\r\n      fetchPlayers();\r\n    }\r\n  };\r\n\r\n  const handleEdit = (player) => {\r\n    setSelectedPlayer(player);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Manage Players</h2>\r\n      <PlayerForm teams={teams} onSubmit={handleAddOrUpdate} selectedPlayer={selectedPlayer} clearSelection={() => setSelectedPlayer(null)} />\r\n      <PlayerList players={players} onEdit={handleEdit} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport PlayerForm from 'frontend\\src\\components\\PlayerForm.jsx';\nimport PlayerList from 'frontend\\src\\components\\PlayerList.jsx';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Players() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const fetchPlayers = async () => {\n    try {\n      const res = await api.get('/players/');\n      setPlayers(res.data);\n    } catch (error) {\n      console.error('Error fetching players:', error);\n      alert('There was an error fetching the players');\n    }\n  };\n  const fetchTeams = async () => {\n    try {\n      const res = await api.get('/teams/');\n      setTeams(res.data);\n    } catch (error) {\n      console.error('Error fetching teams:', error);\n      alert('There was an error fetching the teams');\n    }\n  };\n  useEffect(() => {\n    fetchPlayers();\n    fetchTeams();\n  }, []);\n  const handleAddOrUpdate = async playerData => {\n    try {\n      if (playerData.id) {\n        await api.put(`/players/${playerData.id}`, playerData);\n      } else {\n        await api.post('/players/', playerData);\n      }\n      fetchPlayers();\n    } catch (error) {\n      console.error('Error adding or updating player:', error);\n      alert('There was an error adding or updating the player');\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this player?')) {\n      try {\n        await api.delete(`/players/${id}`);\n        fetchPlayers();\n      } catch (error) {\n        console.error('Error deleting player:', error);\n        alert('There was an error deleting the player');\n      }\n    }\n  };\n  const handleEdit = player => {\n    setSelectedPlayer(player);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerForm, {\n      teams: teams,\n      onSubmit: handleAddOrUpdate,\n      selectedPlayer: selectedPlayer,\n      clearSelection: () => setSelectedPlayer(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerList, {\n      players: players,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(Players, \"4KQpFxyGyxufhHDqtuBqiUD3LUM=\");\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useEffect","useState","PlayerForm","PlayerList","api","jsxDEV","_jsxDEV","Players","_s","players","setPlayers","teams","setTeams","selectedPlayer","setSelectedPlayer","fetchPlayers","res","get","data","error","console","alert","fetchTeams","handleAddOrUpdate","playerData","id","put","post","handleDelete","window","confirm","delete","handleEdit","player","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","clearSelection","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/aashi/OneDrive/Desktop/Cricket-Player-Management/frontend/src/pages/Players.jsx"],"sourcesContent":["/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport PlayerForm from '../components/PlayerForm';\r\nimport PlayerList from '../components/PlayerList';\r\nimport api from '../api';\r\n\r\nfunction Players() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\r\n\r\n\r\n  const fetchPlayers = async () => {\r\n    const res = await api.get('/players/');\r\n    setPlayers(res.data);\r\n  };\r\n\r\n  const fetchTeams = async () => {\r\n    const res = await api.get('/teams/');\r\n    setTeams(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlayers();\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  const handleAddOrUpdate = async (playerData) => {\r\n    if (playerData.id) {\r\n      await api.put(`/players/${playerData.id}`, playerData);\r\n    } else {\r\n      await api.post('/players/', playerData);\r\n    }\r\n    fetchPlayers();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this player?')) {\r\n      await api.delete(`/players/${id}`);\r\n      fetchPlayers();\r\n    }\r\n  };\r\n\r\n  const handleEdit = (player) => {\r\n    setSelectedPlayer(player);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Manage Players</h2>\r\n      <PlayerForm teams={teams} onSubmit={handleAddOrUpdate} selectedPlayer={selectedPlayer} clearSelection={() => setSelectedPlayer(null)} />\r\n      <PlayerList players={players} onEdit={handleEdit} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n*/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport PlayerForm from 'frontend\\src\\components\\PlayerForm.jsx';\r\nimport PlayerList from 'frontend\\src\\components\\PlayerList.jsx';\r\nimport api from '../api';\r\n\r\nfunction Players() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\r\n\r\n  const fetchPlayers = async () => {\r\n    try {\r\n      const res = await api.get('/players/');\r\n      setPlayers(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching players:', error);\r\n      alert('There was an error fetching the players');\r\n    }\r\n  };\r\n\r\n  const fetchTeams = async () => {\r\n    try {\r\n      const res = await api.get('/teams/');\r\n      setTeams(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching teams:', error);\r\n      alert('There was an error fetching the teams');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlayers();\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  const handleAddOrUpdate = async (playerData) => {\r\n    try {\r\n      if (playerData.id) {\r\n        await api.put(`/players/${playerData.id}`, playerData);\r\n      } else {\r\n        await api.post('/players/', playerData);\r\n      }\r\n      fetchPlayers();\r\n    } catch (error) {\r\n      console.error('Error adding or updating player:', error);\r\n      alert('There was an error adding or updating the player');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this player?')) {\r\n      try {\r\n        await api.delete(`/players/${id}`);\r\n        fetchPlayers();\r\n      } catch (error) {\r\n        console.error('Error deleting player:', error);\r\n        alert('There was an error deleting the player');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (player) => {\r\n    setSelectedPlayer(player);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Manage Players</h2>\r\n      <PlayerForm teams={teams} onSubmit={handleAddOrUpdate} selectedPlayer={selectedPlayer} clearSelection={() => setSelectedPlayer(null)} />\r\n      <PlayerList players={players} onEdit={handleEdit} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}