"""initial migration

Revision ID: e26790ba4726
Revises: 
Create Date: 2025-05-09 09:49:23.717647

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy import text
"""
def upgrade():
    # Check if the 'age' column exists before attempting to drop it
    op.execute(text("ALTER TABLE player DROP COLUMN IF EXISTS age"))

"""

# revision identifiers, used by Alembic.
revision = 'e26790ba4726'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.alter_column('team_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('player_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'team', ['team_id'], ['id'])
        #batch_op.drop_column('age')
        # Check if 'age' column exists, then drop it
        #batch_op.execute
        ("""
            SET @column_exists = (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
                                  WHERE table_name = 'player' AND column_name = 'age');
            IF @column_exists > 0 THEN
                ALTER TABLE player DROP COLUMN age;
            END IF;
        """)
        batch_op.drop_column('age')
        batch_op.drop_column('role')

    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.drop_column('city')
        batch_op.drop_column('coach')
        batch_op.drop_column('founded_year')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.add_column(sa.Column('founded_year', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('coach', mysql.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('city', mysql.VARCHAR(length=100), nullable=True))
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', mysql.ENUM('Batsman', 'Bowler', 'All-Rounder', 'Wicket-Keeper'), nullable=True))
        batch_op.add_column(sa.Column('age', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('player_ibfk_1', 'team', ['team_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('team_id',
               existing_type=mysql.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
